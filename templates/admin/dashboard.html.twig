{% extends 'base.html.twig' %}

{% block title %}User index{% endblock %}

{% block body %}
<div class="body">
       <style>
            body {
            background-color: #f2f2f2; /* Fond d'écran gris */
            font-family: Arial, sans-serif;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .table-container, .form-container {
            flex: 1;
            margin: 10px;
        }
        .form-container {
            max-width: 400px;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: black;
            color: white;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2; /* Ligne de fond gris clair */
        }
        tr:nth-child(odd) {
            background-color: #fff; /* Ligne de fond blanc */
        }
        #searchInput {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
    </style>

<body>
    <div class="container">
       <div class="row mb-3">
            <h2 class="col mb-0">Liste des utilisateurs</h2>
            <div  class="col" style="display:contents">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                <i class="bi bi-person-plus"></i>  ajouter 
                </button>
            </div>
        </div>
        {% if success %}
            <div id="success" class="row">
                <div class="alert alert-success" role="alert">
                     {{ success }}
                </div>
            </div>
        {% endif %}

        {% include 'admin/new.html.twig' with {'form': form} %}

       


        <input type="text" id="searchInput" onkeyup="searchUsers()" placeholder="Rechercher un utilisateur... (email)">
        <div class="row">
            <table id="usersTable">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nom d'utilisateur</th>
                        <th>Email</th>
                        <th>Roles</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for user in users %}
                    <tr>
                        <td>{{ user.id }}</td>
                        <td>{{ user.username }}</td>
                        <td>{{ user.email }}</td>
                        <td>
                            {% if 'ROLE_ADMIN' not in user.roles %}
                                <div class="btn btn-warning btn-sm rounded btn-no-pointer">admin</div>
                            {% else %}
                                <div class="btn btn-success btn-sm rounded btn-no-pointer">admin</div>
                            {% endif %}

                            {% if 'ROLE_ATELIER' not in user.roles %}
                                <div class="btn btn-warning btn-sm rounded btn-no-pointer">atelier</div>
                            {% else %}
                                <div class="btn btn-success btn-sm rounded btn-no-pointer">atelier</div>
                            {% endif %}

                            {% if 'ROLE_COMPTA' not in user.roles %}
                                <div class="btn btn-warning btn-sm rounded btn-no-pointer">compta</div>
                            {% else %}
                                <div class="btn btn-success btn-sm rounded btn-no-pointer">compta</div>
                            {% endif %}
                        </td>
                        <td>
                            <form action="{{ path('app_user_delete', {'id': user.id}) }}" method="post" class="d-inline" onsubmit="return confirm('La suppression d'un utilisateur entraînera celle de ses recettes ainsi que de ses commentaires, voulez-vous continuer ?');">
                                <button type="submit" class="btn btn-danger btn-sm">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </form>
                            <span data-toggle="tooltip" title="Modifier l'utilisateur">
                                <button type="button" class="btn btn-info btn-sm me-2" data-toggle="modal" data-target="#editModal-{{ user.id }}">
                                    <i class="bi bi-link"></i>
                                </button>
                            </span>
                            {% include 'admin/edit.html.twig' with {'user': user, 'forms': forms} %}
                        </td>
                    </tr>
                    
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function searchUsers() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("usersTable");
            tr = table.getElementsByTagName("tr");

            // Suppose the email is in the second column (index 1)
            var emailColumnIndex = 2;

            for (i = 1; i < tr.length; i++) {
                tr[i].style.display = "none";
                td = tr[i].getElementsByTagName("td");
                if (td[emailColumnIndex]) {
                    txtValue = td[emailColumnIndex].textContent || td[emailColumnIndex].innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    }
                }
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            let userIds = document.querySelectorAll("[id^='editUser-']");
            userIds.forEach(function (element) {
                let userId = element.id.replace('editUser-', '');
                    setupCollection('editPosteUser-' + userId, 'user_qualifPostes_');
                    setupCollection('editGammeUser-' + userId, 'user_gammes_');
            });

            setupCollection('addPosteUser', 'user_qualifPostes_');
            setupCollection('addGammeUser', 'user_gammes_');
        });

function setupCollection(collectionId, formPrefix) {
    let collection = document.querySelector(`#${collectionId}`);
    if (!collection) return; // Exit if the collection does not exist

    let collectionSpan = collection.querySelector("span");

    let addButton = document.createElement("button");
    addButton.className = "btn custom-btn-outline-success rounded mt-2";
    addButton.type = "button";
    addButton.innerHTML = '<i class="bi bi-plus-circle-fill icon-size"></i>';
    collection.appendChild(addButton); // Append the add button to the collection

    // Initialize the index to the number of existing elements
    let existingElements = collection.querySelectorAll(`div[id^='${formPrefix}']`);
    collection.dataset.index = existingElements.length;

    updateDeleteButtons(collection, formPrefix);

    addButton.addEventListener("click", function () {
        addNewForm(collection, collectionSpan, collectionId, formPrefix);
    });
}

function updateDeleteButtons(collection, formPrefix) {
    let collectionDivs = collection.querySelectorAll(`div[id^='${formPrefix}']`);
    collectionDivs.forEach(function (div, index) {
        if (!div.querySelector('.btn.custom-btn-outline-danger')) {
            addDeleteButton(div, index, formPrefix);
        }
    });
}

function addDeleteButton(div, index, formPrefix) {
    let divSuppr = document.createElement("div");
    divSuppr.className = "col-1 centered";

    let deleteButton = document.createElement("button");
    deleteButton.type = "button";
    deleteButton.id = `delete-${formPrefix}-${index}`;
    deleteButton.className = "btn custom-btn-outline-danger bouton-suppr-form";
    deleteButton.innerHTML = '<i class="bi bi-trash icon-size"></i>';

    divSuppr.appendChild(deleteButton);
    div.appendChild(divSuppr);

    deleteButton.addEventListener("click", function () {
        div.remove();
        // Update index and IDs of remaining elements
        updateCollectionIndices(collection, formPrefix);
    });
}

function addNewForm(collection, collectionSpan, collectionId, formPrefix) {
    let prototype = collection.dataset.prototype;
    let index = collection.dataset.index;
    let newFormHtml = prototype.replace(/__name__/g, index);

    let tempDiv = document.createElement('div');
    tempDiv.innerHTML = newFormHtml;
    let newForm = tempDiv.firstElementChild;

    newForm.classList.add("row");
    newForm.id = `${formPrefix}${index}`;
    addDeleteButton(newForm, index, formPrefix);

    collectionSpan.appendChild(newForm); // Append the new form to the collection span
    collection.dataset.index++;
}

function updateCollectionIndices(collection, formPrefix) {
    let collectionDivs = collection.querySelectorAll(`div[id^='${formPrefix}']`);
    collectionDivs.forEach(function (div, index) {
        div.id = `${formPrefix}${index}`;
        let deleteButton = div.querySelector('.btn.custom-btn-outline-danger');
        if (deleteButton) {
            deleteButton.id = `delete-${formPrefix}-${index}`;
        }
    });
    // Update the index to the new number of elements
    collection.dataset.index = collectionDivs.length;
}

    </script>
</body>
</html>
</div> 
{% endblock %}
